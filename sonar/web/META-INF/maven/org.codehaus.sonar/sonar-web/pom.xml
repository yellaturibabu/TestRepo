<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.sonar</groupId>
    <artifactId>server</artifactId>
    <version>5.1</version>
    <relativePath>..</relativePath>
  </parent>
  <artifactId>sonar-web</artifactId>
  <packaging>war</packaging>
  <name>SonarQube :: Web</name>

  <properties>
    <!-- self-analysis -->
    <sonar.sources>src/main/js,src/main/coffee,src/main/hbs,src/main/less</sonar.sources>
    <sonar.exclusions>src/main/js/third-party/**/*,src/main/js/require.js,src/main/js/tests/**/*</sonar.exclusions>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/src/main/webapp/deploy</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <excludes>
                <exclude>readme.txt</exclude>
              </excludes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.codehaus.sonar</groupId>
                  <artifactId>sonar-colorizer</artifactId>
                  <version>${project.version}</version>
                  <outputDirectory>${basedir}/src/main/webapp/stylesheets</outputDirectory>
                  <includes>**/sonar-colorizer.css</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/webapp</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-generated-webapp</id>
            <!-- must be after the execution of grunt -->
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>src/main/webapp/build</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>reserve-network-port</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <portNames>
                <portName>jsTestPort</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v0.10.26</nodeVersion>
              <npmVersion>1.4.3</npmVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <phase>generate-resources</phase>
            <id>grunt build</id>
            <goals>
              <goal>grunt</goal>
            </goals>
            <configuration>
              <arguments>maven-build-skip-tests-${skipWebTests} --port=${jsTestPort} --no-color</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <packagingExcludes>
            **/*.log,*.iml,WEB-INF/script/,WEB-INF/test/,javascripts/*-min.js,stylesheets/*-min.css,javascripts/tests/**/*,
            build/**,coffee/**,less/**,templates/**
          </packagingExcludes>
          <warSourceExcludes>
            js/**,css/**
          </warSourceExcludes>
          <archive>
            <manifestEntries>
              <Version>${project.version}</Version>
              <!-- ${buildNumber} is the Git revision. It's generated by the buildnumber-maven-plugin -->
              <Implementation-Build>${buildNumber}</Implementation-Build>
              <Build-Time>${timestamp}</Build-Time>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <overlays>
                <overlay>
                  <groupId>com.sonarsource</groupId>
                  <artifactId>sonarsource-branding</artifactId>
                  <!-- branding resources are added first -->
                  <excludes>
                    <exclude>META-INF/**/*</exclude>
                  </excludes>
                </overlay>
                <overlay>
                  <!-- empty groupId/artifactId represents the current build => branding not overwritten -->
                </overlay>
              </overlays>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>com.sonarsource</groupId>
          <artifactId>sonarsource-branding</artifactId>
          <version>1.1</version>
          <type>war</type>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>
